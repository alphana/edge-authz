### Authorization by token, part 1. Retrieve and save token.
POST http://localhost:8080/auth/realms/beans/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

client_id={{client_id}}&client_secret={{client_secret}}&grant_type=password&username=reader-user&password=test

> {% client.global.set("reader_user_auth_token", response.body.access_token); %}



### Authorization compositeuser
POST http://localhost:8080/auth/realms/beans/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

client_id={{client_id}}&client_secret={{client_secret}}&grant_type=password&username=compositeuser&password=test

> {% client.global.set("composite_user_auth_token", response.body.access_token); %}



### reader_user_auth_token

GET http://localhost:9090/api/1/resource/
Accept: application/json
Authorization: Bearer {{reader_user_auth_token}}

### reader_user_auth_token

POST http://localhost:9090/api/1/resource/
Accept: application/json
Authorization: Bearer {{reader_user_auth_token}}


### composite_user_auth_token

POST http://localhost:9090/api/1/resource/
Accept: application/json
Authorization: Bearer {{composite_user_auth_token}}

### unauthz by resource
GET http://localhost:9090/api/1/resources/
Accept: application/json
Authorization: Bearer {{reader_user_auth_token}}

### unauthz by method
PUT http://localhost:9090/api/1/resource/
Accept: application/json
Authorization: Bearer {{reader_user_auth_token}}